---

- name: Create a directory for distributions
  become: true
  ansible.builtin.file:
    path: '{{ consul_bin_dir }}'
    state: directory
    group: root
    owner: root
    mode: 0755

- name: Check distribute existing
  ansible.builtin.stat: {path: '{{ consul_bin_dir }}/consul-{{ consul_version }}'}
  register: _consul_exists

- name: Download distributive
  when: not _consul_exists.stat.exists
  block:
    - name: Create temporary directory
      become: false
      ansible.builtin.tempfile: {state: directory, suffix: consul}
      register: _consul_tmp_dir

    - name: 'Download distributive archive (version {{ consul_version }})'
      ansible.builtin.get_url:
        url: 'https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_linux_amd64.zip'
        dest: '{{ _consul_tmp_dir.path }}/dist.zip'
        mode: 0644

    - name: Extract files
      ansible.builtin.unarchive:
        src: '{{ _consul_tmp_dir.path }}/dist.zip'
        dest: '{{ _consul_tmp_dir.path }}'
        remote_src: true

    - name: Copy binary file
      become: true
      ansible.builtin.copy:
        src: '{{ _consul_tmp_dir.path }}/consul'
        dest: '{{ consul_bin_dir }}/consul-{{ consul_version }}'
        owner: root
        group: root
        mode: 0755
        remote_src: true

    - name: Give the binary file ability to bind to privileged ports
      become: true
      changed_when: false
      ansible.builtin.command:
        cmd: "/usr/sbin/setcap 'cap_net_bind_service=+ep' '{{ consul_bin_dir }}/consul-{{ consul_version }}'"

    - name: Create a symlink on a downloaded binary file
      become: true
      ansible.builtin.file:
        path: '{{ consul_bin }}'
        src: '{{ consul_bin_dir }}/consul-{{ consul_version }}'
        state: link
        group: root
        owner: root
        mode: 0755
      notify: [restart consul]

  always:
    - name: Remove temporary directory
      ansible.builtin.file: {path: '{{ _consul_tmp_dir.path }}', state: absent}

- name: Ensure group exists
  become: true
  ansible.builtin.group: {name: consul, state: present}

- name: Ensure user exists
  become: true
  ansible.builtin.user:
    name: consul
    shell: /bin/false
    home: /home/consul
    password_lock: true
    create_home: false
    group: consul
    state: present

- name: Create directories
  become: true
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    group: consul
    owner: consul
    mode: 0755
  loop: [/opt/consul, /etc/consul.d]

- name: Create unit file
  become: true
  ansible.builtin.template:
    src: consul.service.j2
    dest: /etc/systemd/system/consul.service
    group: root
    owner: root
    mode: 0644
  notify: [reload systemd, restart consul]
